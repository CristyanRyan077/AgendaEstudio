<Application x:Class="AgendaWPF.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
              xmlns:conv="clr-namespace:AgendaWPF.Converters"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:local="clr-namespace:AgendaWPF" xmlns:hc="https://handyorg.github.io/handycontrol">
    <Application.Resources>
        <ResourceDictionary>
           


            <ResourceDictionary.MergedDictionaries>
                <hc:Theme/>
                <materialDesign:BundledTheme BaseTheme="Dark" PrimaryColor="BlueGrey" SecondaryColor="Teal"/>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <conv:MenorQueTotalPaginasConverter x:Key="MenorQueTotalPaginasConverter"/>
            <conv:MenorQueConverter x:Key="MenorQueConverter"/>
            <conv:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
            <conv:StageParamConverter x:Key="StageParamConverter"/>

            <conv:EnumToBoolConverter x:Key="EnumToBoolConverter"/>
            <conv:TruncateConverter x:Key="TruncateConverter" Max="60"/>
            <conv:NotificacaoGrupoConverter x:Key="NotificacaoGrupoConverter"/>
            <conv:EnumToVisibilityConverter x:Key="EnumToVisibilityConverter"/>
            <conv:MesAnoPtBrConverter x:Key="MesAnoPtBrConverter"/>
            <conv:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
            <conv:MaisConverter x:Key="MaisConverter" Limit="3"/>
            <conv:MaisVisibilityConverter x:Key="MaisVisibilityConverter" Limit="3"/>
            <conv:ZeroToCollapsedConverter x:Key="ZeroToCollapsed"/>
            <conv:PagoParaCorBrushConverter x:Key="PagoParaCor"/>
            <conv:StringEqualsConverter x:Key="StringEqualsConverter"/>
            <conv:IntToVisibilityConverter x:Key="IntToVisibilityConverter"/>
            <conv:DateEqualsConverter x:Key="DateEqualsConverter"/>
            <conv:IdEqualsConverter x:Key="IdEqualsConverter"/>
            <conv:EtapaToBrushConverter x:Key="EtapaToBrushConverter"/>
            <conv:BoolToBrushConverter x:Key="BoolToBrushConverter"/>
            <conv:PercentToBrushConverter x:Key="PercentToBrushConverter"/>
            <conv:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibilityConverter"/>
            <conv:StatusToColorConverter x:Key="StatusToColorConverter"/>
            <conv:StatusIsPendingConverter x:Key="StatusIsPendingConverter"/>
            <conv:DecimalSafeConverter x:Key="DecimalSafeConverter"/>
            <conv:BoolToTextConverter x:Key="BoolToTextConverter" 
                               TrueText="Salvar"
                               FalseText=" ➕ Adicionar Pagamento"/>

            <Style x:Key="NavButtonStyle" TargetType="Button">
                <Setter Property="Height" Value="70"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="FontSize" Value="13"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border CornerRadius="8" Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <!-- Efeitos ao passar o mouse -->
                <Setter Property="materialDesign:RippleAssist.IsCentered" Value="True"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="LightGray"/>
                        <Setter Property="Foreground" Value="Black"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" Value="#1F1F1F"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
